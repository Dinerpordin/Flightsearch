name: Android Release APK

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android build tools and platform
        run: |
          sdkmanager --install "platform-tools" "build-tools;34.0.0" "platforms;android-34"
          sdkmanager --licenses <<< "y"

      - name: Decode keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          mkdir -p keystore
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore/flightsearch-release.jks

      - name: Configure gradle.properties
        env:
          RELEASE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: |
          echo "RELEASE_STORE_FILE=keystore/flightsearch-release.jks" >> gradle.properties
          echo "RELEASE_STORE_PASSWORD=${RELEASE_STORE_PASSWORD}" >> gradle.properties
          echo "RELEASE_KEY_ALIAS=${RELEASE_KEY_ALIAS}" >> gradle.properties
          echo "RELEASE_KEY_PASSWORD=${RELEASE_KEY_PASSWORD}" >> gradle.properties
          echo "APP_VERSION_CODE=${{ github.run_number }}" >> gradle.properties
          echo "APP_VERSION_NAME=1.0.${{ github.run_number }}" >> gradle.properties

      - name: Set up Gradle (no wrapper needed)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Build release APK
        run: gradle assembleRelease --stacktrace

      - name: Locate APK
        id: locate
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name "*release*.apk" | head -n 1)
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.locate.outputs.apk_path }}
          if-no-files-found: error
